@page "/person"
@inject IPersonService personService
@inject ILocalStorageService _localStorageService
@inject NavigationManager NavManager

<h1>People Page</h1>

<h4>Insert New Person</h4>
<EditForm Model="@newPerson" OnValidSubmit="@InsertPerson">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="Email">Email:</label>
        <InputText id="Email" @bind-Value="newPerson.Email" />
    </div>

    <div class="form-group">
        <label for="DeviceId">DeviceId:</label>
        <InputText id="DeviceId" @bind-Value="newPerson.DeviceId" />
    </div>

    @*<div class="form-group">
            <label for="ControlType">ControlType:</label>
            <InputText id="ControlType" @bind-Value="newPerson.ControlType" />
        </div>*@

    <select class="custom-select" @onchange="WriteClicked" title="Region is required ">
        <option value="Select" selected disabled="disabled">State</option>
        <option value="1">Read</option>
        <option value="2">Read/Write</option>
    </select>


    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@code {
    private GiveAccessDto newPerson = new GiveAccessDto();
    private string cityName;

    protected override async Task OnInitializedAsync() {
        if (await _localStorageService.GetItem<string>("token") == null) {
            NavManager.NavigateTo("/Login", true);
        }
    }

    private async Task InsertPerson()
    {
        //ProductController person = new ProductController();
        //person.insertPeople(newPerson);
        @* this.Http.Post *@
        @* Http.postAsync(); *@
    await this.personService.GiveAcces(newPerson);
}

void WriteClicked(Microsoft.AspNetCore.Components.ChangeEventArgs cityEvent)
{
    cityName = cityEvent.Value.ToString();
    this.StateHasChanged();
}

}
